type Query {
  user: User!
  table(slug: String!): Table
  subjects(tableId: ID!): [Subject]
  classes(tableId: ID!): [Class]
  teachers(tableId: ID!): [Teacher]
}

type Mutation {
  signIn(username: String!, password: String!): Token!

  createTable(title: String!, slug: String!): Table!
  updateTable(title: String!, slug: String!, id: ID!): Table!
  deleteTable(id: ID!): Table!
  duplicateTable(id: ID!): Table!

  createSubject(title: String!, isDivisible: Boolean!, tableId: ID!): Subject!
  updateSubject(
    id: ID!
    title: String!
    isDivisible: Boolean!
    tableId: ID!
  ): Subject!
  deleteSubject(id: ID!, tableId: ID!): Subject!

  createClass(title: String!, isDivisible: Boolean!, tableId: ID!): Class!
  updateClass(
    id: ID!
    title: String!
    isDivisible: Boolean!
    tableId: ID!
  ): Class!
  deleteClass(id: ID!, tableId: ID!): Class!

  createTeacher(name: String!, tableId: ID!, slug: String!): Teacher!
  updateTeacher(id: ID!, name: String!, tableId: ID!, slug: String!): Teacher!
  updateWorkload(
    tableId: ID!
    teacherId: ID!
    subjectId: ID!
    classId: ID!
    hours: Int!
    prevHours: Int!
  ): Workload!
  deleteTeacher(id: ID!, tableId: ID!): Teacher!
}
